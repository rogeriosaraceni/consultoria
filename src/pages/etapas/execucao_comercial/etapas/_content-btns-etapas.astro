---
const btnsEtapas = [
    {
        idLi: "pageSwotLi",
        show: "display:block",
        link: "./tabs/swot/",
        dataBsTarget: "#pageSwot",
        ariaControls: "pageSwot",
        name: "Análise SWOT",
    },
    {
        idLi: "pageEquipeLi",
        show: "display:none",
        link: "./tabs/equipe/",
        dataBsTarget: "#pageEquipe",
        ariaControls: "pageEquipe",
        name: "Eq. Coml QLP",
    },
    {
        idLi: "pageTreinamentosLi",
        show: "display:none",
        link: "./tabs/treinamentos/",
        dataBsTarget: "#pageTreinamentos",
        ariaControls: "pageTreinamentos",
        name: "UC/Treinamentos",
    },
    {
        idLi: "pageWizLi",
        show: "display:none",
        link: "./tabs/wiz/",
        dataBsTarget: "#pageWiz",
        ariaControls: "pageWiz",
        name: "Wiz.Member",
    },
    {
        idLi: "pageFunilLi",
        show: "display:none",
        link: "./tabs/funil/",
        dataBsTarget: "#pageFunil",
        ariaControls: "pageFunil",
        name: "Funil de Vendas",
    },
    {
        idLi: "pagePassosLi",
        show: "display:none",
        link: "./tabs/passos/",
        dataBsTarget: "#pagePassos",
        ariaControls: "pagePassos",
        name: "5 Passos da Venda",
    },
    {
        idLi: "pageAnaliseLi",
        show: "display:none",
        link: "./tabs/analise/",
        dataBsTarget: "#pageAnalise",
        ariaControls: "pageAnalise",
        name: "Análise Concorrência",
    },
    {
        idLi: "pageParceriasLi",
        show: "display:none",
        link: "./tabs/parcerias/",
        dataBsTarget: "#pageParcerias",
        ariaControls: "pageParcerias",
        name: "Parcerias",
    },
    {
        idLi: "pageMetasLi",
        show: "display:none",
        link: "./tabs/metas/",
        dataBsTarget: "#pageMetas",
        ariaControls: "pageMetas",
        name: "Definição Metas",
    },
    {
        idLi: "pageRedesSocialLi",
        show: "display:none",
        link: "./tabs/redes/",
        dataBsTarget: "#pageRedesSocial",
        ariaControls: "pageRedesSocial",
        name: "Redes Socias",
    },
    {
        idLi: "pageGestaoVistaLi",
        show: "display:none",
        link: "./tabs/gestao/",
        dataBsTarget: "#pageGestaoVista",
        ariaControls: "pageGestaoVista",
        name: "Gestão a Vista",
    },
    {
        idLi: "pageControleAcaoLi",
        show: "display:none",
        link: "./tabs/controle/",
        dataBsTarget: "#pageControleAcao",
        ariaControls: "pageControleAcao",
        name: "Controle de Ações",
    },
]
---

<div class="card">
    <div class="card-body">
        <ul class="row nav nav-pills nav-pills-app" id="pills-tab" role="tablist">
            {
                btnsEtapas.map((etapa) => (
                    <li class="nav-item col-xl-2 col-lg-3 col-md-4 col-sm-6" data-tab={etapa.idLi} role="presentation" style={etapa.show}>
                        <a
                            href={etapa.link}
                            class="nav-link"
                            data-bs-target={etapa.dataBsTarget}
                            aria-controls={etapa.ariaControls}
                            role="tab"
                            data-bs-toggle="tab"
                        >
                            {etapa.name}
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</div>

<section class="tab-content p-0 border-0 position-relative">
    {
        btnsEtapas.map((content) => (
            <article role="tabpanel" class="tab-pane fade" id={content.ariaControls} data-content={content.idLi}></article>
        ))
    }
</section>

<script is:inline type="module">
    $('a[data-bs-toggle="tab"]').on('click', function (e) {
        e.preventDefault()
        const url = $(this).attr("href")
        const target = $(this).data("bs-target")

        console.log(url, target);

        // Verifica se a aba já foi carregada
        if (!$(target).hasClass('loaded')) {
            $(target).load(url, function() {
                // Marca a aba como carregada
                $(target).addClass('loaded')
                $(this).tab('show')
            });
        } else {
            // Mostra a aba se já estiver carregada
            $(this).tab('show')
        }

        //https://datatables.net/examples/api/tabs_and_scrolling.html
        //corrige ajuste de largura definidas com scroll automatido do datatables, apartir da 2 tab
        $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust()

        //https://www.amcharts.com/docs/v4/tutorials/chart-was-not-disposed/
		//limpa objetos e manipuladores estanciados e corrige os avisos no console quando reabre uma Tab
		//Para esta tarefa simples, o amCharts 4 vem com uma função global integrada:
		am4core.options.autoDispose = true
    });

    $('a[data-bs-toggle="tab"]').on('show.bs.tab', function (e) {
        // Inicializa o bootstrap-select para os elementos select dentro da aba
        $('.selectpicker').selectpicker()
    })

    // Carrega e mostra a aba inicial
    const initialTagert = "#pageSwot" //só alterar aqui
    const initialTab = $(`[data-bs-target="${initialTagert}"]`)
    const initialUrl = initialTab.attr("href");

    $(initialTagert).load(initialUrl, function() {
        $(initialTagert).addClass('loaded')
        initialTab.tab('show')
    })
</script>

<script is:inline>
    window.addEventListener('load', () => {
        const tabPageEquipe = document.querySelector('[data-tab="pageEquipeLi"]');
        const contentPageEquipe = document.querySelector('[data-content="pageEquipeLi"]');

        if (localStorage.getItem("checkboxEquipe") === "true") {
            tabPageEquipe.style.display = "block";
        } else {
            tabPageEquipe.style.display = "none";
            contentPageEquipe.classList.remove('active', 'loaded', 'show')
        }
    })
</script>
