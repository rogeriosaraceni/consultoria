---
const btnsEtapas = [
    {
        idLi: "pageSwot",
        show: "display:block",
        link: "./tabs/swot/",
        dataBsTarget: "#pageSwot",
        ariaControls: "pageSwot",
        name: "Análise SWOT",
    },
    {
        idLi: "pageEquipe",
        show: "display:none",
        link: "./tabs/equipe/",
        dataBsTarget: "#pageEquipe",
        ariaControls: "pageEquipe",
        name: "Eq. Coml QLP",
    },
    {
        idLi: "pageTreinamentos",
        show: "display:none",
        link: "./tabs/treinamentos/",
        dataBsTarget: "#pageTreinamentos",
        ariaControls: "pageTreinamentos",
        name: "UC/Treinamentos",
    },
    {
        idLi: "pageWiz",
        show: "display:none",
        link: "./tabs/wiz/",
        dataBsTarget: "#pageWiz",
        ariaControls: "pageWiz",
        name: "Wiz.Member",
    },
    {
        idLi: "pageFunil",
        show: "display:none",
        link: "./tabs/funil/",
        dataBsTarget: "#pageFunil",
        ariaControls: "pageFunil",
        name: "Funil de Vendas",
    },
    {
        idLi: "pagePassos",
        show: "display:none",
        link: "./tabs/passos/",
        dataBsTarget: "#pagePassos",
        ariaControls: "pagePassos",
        name: "5 Passos da Venda",
    },
    {
        idLi: "pageAnalise",
        show: "display:none",
        link: "./tabs/analise/",
        dataBsTarget: "#pageAnalise",
        ariaControls: "pageAnalise",
        name: "Análise Concorrência",
    },
    {
        idLi: "pageParcerias",
        show: "display:none",
        link: "./tabs/parcerias/",
        dataBsTarget: "#pageParcerias",
        ariaControls: "pageParcerias",
        name: "Parcerias",
    },
    {
        idLi: "pageCalendarioAcoes",
        show: "display:none",
        link: "./tabs/calendario/",
        dataBsTarget: "#pageCalendarioAcoes",
        ariaControls: "pageCalendarioAcoes",
        name: "Calendário de Ações",
    },
    {
        idLi: "pageMetas",
        show: "display:none",
        link: "./tabs/metas/",
        dataBsTarget: "#pageMetas",
        ariaControls: "pageMetas",
        name: "Definição Metas",
    },
    {
        idLi: "pageRedesSocial",
        show: "display:none",
        link: "./tabs/redes/",
        dataBsTarget: "#pageRedesSocial",
        ariaControls: "pageRedesSocial",
        name: "Redes Sociais",
    },
    {
        idLi: "pageGestaoVista",
        show: "display:none",
        link: "./tabs/gestao/",
        dataBsTarget: "#pageGestaoVista",
        ariaControls: "pageGestaoVista",
        name: "Gestão a Vista",
    },
    {
        idLi: "pageControleAcao",
        show: "display:none",
        link: "./tabs/controle/",
        dataBsTarget: "#pageControleAcao",
        ariaControls: "pageControleAcao",
        name: "Controle de Ações",
    },
    {
        idLi: "pagePlanoAcaoComercial",
        show: "display:none",
        link: "./tabs/plano/",
        dataBsTarget: "#pagePlanoAcaoComercial",
        ariaControls: "pagePlanoAcaoComercial",
        name: "Plano de Ação Comercial",
    },
]
---

<section class="wrapper-sticky-tabs">
    <div class="card">
        <div class="card-body">
            <ul class="row nav nav-pills nav-pills-app" id="pills-tab" role="tablist">
                {
                    btnsEtapas.map((etapa) => (
                        <li class="nav-item col-xl-2 col-lg-3 col-md-4 col-sm-6" data-tab={etapa.idLi} role="presentation" style={etapa.show}>
                            <a
                                href={etapa.link}
                                class="nav-link"
                                data-bs-target={etapa.dataBsTarget}
                                aria-controls={etapa.ariaControls}
                                role="tab"
                                data-bs-toggle="tab"
                            >
                                {etapa.name}
                            </a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
</section>

<style is:inline>
    .wrapper-sticky-tabs{
        position: sticky;
        top: 75px;
        z-index:10;
    }
    .wrapper-sticky-tabs .card{
        background-color: #d0dae4;
    }

    @media(max-width: 991px){
        .wrapper-sticky-tabs{
            position: relative;
            top: auto;
        }
    }
</style>

<section class="tab-content p-0 border-0 position-relative">
    {
        btnsEtapas.map((content) => (
            <article
                role="tabpanel"
                class="tab-pane fade"
                id={content.ariaControls}
                data-content={content.idLi}
            >
            </article>
        ))
    }
</section>

<script is:inline type="module">
    $('a[data-bs-toggle="tab"]').on('click', function (e) {
        e.preventDefault()
        const url = $(this).attr("href")
        const target = $(this).data("bs-target")

        // Verifica se a aba já foi carregada
        if (!$(target).hasClass('loaded')) {
            $(target).load(url, function() {
                // Marca a aba como carregada
                $(target).addClass('loaded')
                $(this).tab('show')
                $('.selectpicker').selectpicker()

                const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
                const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
            });
        } else {
            // Mostra a aba se já estiver carregada
            $(this).tab('show')
        }

        //https://datatables.net/examples/api/tabs_and_scrolling.html
        $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust()

        //https://www.amcharts.com/docs/v4/tutorials/chart-was-not-disposed/
        am4core.options.autoDispose = true
    });

    $('a[data-bs-toggle="tab"]').on('show.bs.tab', function () {
        $('.selectpicker').selectpicker()

        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    })

    // Carrega e mostra a aba inicial
    const initialTagert = "#pageSwot" //só alterar aqui
    const initialTab = $(`[data-bs-target="${initialTagert}"]`)
    const initialUrl = initialTab.attr("href");

    $(initialTagert).load(initialUrl, function() {
        $(initialTagert).addClass('loaded')
        initialTab.tab('show')
    })

    //Regra das estapas ativadas na localStorage
    window.addEventListener('load', () => {
        const etapas = [
          //{ key: "etapa_swot",         tabSelector: '[data-tab="pageSwot"]',               contentSelector: '[data-content="pageSwot"]' },
            { key: "etapa_equipe",       tabSelector: '[data-tab="pageEquipe"]',             contentSelector: '[data-content="pageEquipe"]' },
            { key: "etapa_treinamentos", tabSelector: '[data-tab="pageTreinamentos"]',       contentSelector: '[data-content="pageTreinamentos"]' },
            { key: "etapa_wiz",          tabSelector: '[data-tab="pageWiz"]',                contentSelector: '[data-content="pageWiz"]' },
            { key: "etapa_funil",        tabSelector: '[data-tab="pageFunil"]',              contentSelector: '[data-content="pageFunil"]' },
            { key: "etapa_passos",       tabSelector: '[data-tab="pagePassos"]',             contentSelector: '[data-content="pagePassos"]' },
            { key: "etapa_analise",      tabSelector: '[data-tab="pageAnalise"]',            contentSelector: '[data-content="pageAnalise"]' },
            { key: "etapa_parcerias",    tabSelector: '[data-tab="pageParcerias"]',          contentSelector: '[data-content="pageParcerias"]' },
            { key: "etapa_calendario",   tabSelector: '[data-tab="pageCalendarioAcoes"]',    contentSelector: '[data-content="pageCalendarioAcoes"]' },
            { key: "etapa_metas",        tabSelector: '[data-tab="pageMetas"]',              contentSelector: '[data-content="pageMetas"]' },
            { key: "etapa_redes",        tabSelector: '[data-tab="pageRedesSocial"]',        contentSelector: '[data-content="pageRedesSocial"]' },
            { key: "etapa_gestao",       tabSelector: '[data-tab="pageGestaoVista"]',        contentSelector: '[data-content="pageGestaoVista"]' },
            { key: "etapa_acoes",        tabSelector: '[data-tab="pageControleAcao"]',       contentSelector: '[data-content="pageControleAcao"]' },
            { key: "etapa_plano",        tabSelector: '[data-tab="pagePlanoAcaoComercial"]', contentSelector: '[data-content="pagePlanoAcaoComercial"]' },
        ];

        etapas.forEach(etapa => {
            const tabPage = document.querySelector(etapa.tabSelector);
            const contentPage = document.querySelector(etapa.contentSelector);

            if(tabPage && contentPage){
                if (localStorage.getItem(etapa.key) === "true") {
                    tabPage.style.display = "block";
                }
                else {
                    tabPage.style.display = "none";
                    contentPage.classList.remove('active', 'loaded', 'show');
                }
            } else {
                console.error(`Element not found for selectors: ${etapa.tabSelector} or ${etapa.contentSelector}`);
            }
        });
    })
</script>
