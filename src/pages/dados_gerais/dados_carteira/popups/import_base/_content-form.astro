---
import Processing from 'src/shared/components/Processing.astro';
---

<Processing />

<form action="" method="post" enctype="multipart/form-data" id="form-import">
    <section class="row">
        <label class="col-sm-10">Anexo: <small>(Tamanho máximo: 100MB / Tipos: xls e xlsx)</small>
            <input
                type="file"
                name="arquivo"
                id="input-1"
                class="form-control fileInputDefault"
                required
                accept=".xlsx"
                onchange="checkAttachment(1)"
            >
        </label>

        <div class="col-sm-2">
            <div class="label-clearfix last-sm"></div>
			<button type="submit" class="btn btn-primary btn-clearfix btn-last-sm">Importar</button>
        </div>
    </section>
</form>

<script is:inline>
    // $("#form-import").submit(function() {
    //     $('[data-content="processing"]').show();
    //     window.parent.$.magnificPopup.close();
    // });

    var fileSizeText = '100 MB'
    var fileSizeBite = '104857600'
    var extensionsText = '.xlsx, .xls'

    function checkAttachment(item) {
        let fileInput = document.querySelector('#input-' + item)
        let label = document.querySelector('#label-' + item)

        const extensions = /(.xlsx)$/i
        const filePath = fileInput.value || $('#input-' + item).attr("value")
        const fileSize = fileSizeBite

        if (filePath === "") {
            alert(`Insira um anexo`)
            fileInput.value = ''
            label.innerText = ''
            return false
        }

        if (!extensions.exec(filePath) && filePath !== "") {
            alert(`Fora das extensões permitidas: ${extensionsText}`)
            fileInput.value = ''
            label.innerText = ''
            return false
        }

        if (fileInput.files && fileInput.files[0] && fileInput.files[0].size > fileSize) {
            alert(`Execede o tamanho máximo de: ${fileSizeText}!`)
            fileInput.value = ''
            label.innerText = ''
            return false
        }

        return true;
    }
</script>
